/*
 * StackHawk Public API
 *  ![STACKHAWK](https://images.ctfassets.net/nx13ojx82pll/1zPawvEGOq9zKX8PuVw0kB/e4a31b30fdb07b7e424277d7824d2ffe/stackhawk-long.png) # StackHawk API  This is the OpenAPI specification for the [StackHawk](https://www.stackhawk.com) REST API, affectionately known as _Falcon_ ðŸ¦… #Kaakaww!  StackHawk is an application security testing tool built for developers. With powerful automation and integration capabilities, StackHawk gives engineers the ability to find and fix security vulnerabilities on every merge.  ## Getting Started  To make requests to the StackHawk API, you will first need an **API Key** from the StackHawk platform. That will be used to request an **access token**, which is used to authorize requests made to the StackHawk API.  Use of the StackHawk API will require a [StackHawk account](https://auth.stackhawk.com) and an organization with sufficient permissions.  From the StackHawk platform, under [Settings > API Keys](https://app.stackhawk.com/settings/apikeys) create a new API Key. These secrets are long-lived, so store this value in a secure fashion.  ### Authorization  Requests made to the StackHawk API server are authorized following the [OAuth2.0 protocol](https://oauth.net/2/)  To get an access token, make a request to `GET /api/v1/auth/login` and provide the user apikey through the `X-ApiKey` request header. This route will then return an access token that can authenticate further API requests. This token can then be used to authenticate subsequent requests, using the `authorization: Bearer` header.  For more information, see the **Api Authentication** section.  ### Rate Limiting  Api calls are ratelimited, with at most 180 requests per minute.  ## StackHawk Api Standards  ### Client Errors  API Calls that fail due to client input will return 4xx status code.  #### `401 Unauthorized` The server doesn't think you should be making this request.  This error is intentionally vague for security purposes, but any of the following could cause it:  - no authorization was provided - authorization has expired - authorization is insufficient for the requested resource  #### `404 Not Found`  The route or resource does not exist.  #### `400 Bad Request` The server could not process this request, although it may have tried. The JSON reponse body `message` will include details on what input was invalid.  ### Pagination and Sorting  Listing API routes will return resources in a paginated fashion. Paginated requests follow a pattern of taking the following optional path parameters:  * `pageToken`: a string incrementing count of pages in the pagination, starting from '0' * `pageSize`: the number of elements to request in the page, defaults to 10 * `sortField`: sorts the listed resource by an approved field, defaults to sorting by resource name * `sortDir`: either 'asc' or 'desc', defaults ascending  The responseBody of these API routes will additionally include two fields:  * `nextPageToken`: a string indicating the next `pageToken` to pass in for the next page of results with this request * `totalCount`: the total number of resources the query can paginate through  ## Questions? Comments? Concerns? Kaa-Kaww?  We are always making advancements and improvements to our Platform, Scanner and the StackHawk API. If you encounter an issue you cannot solve with this documentation, please reach out to [support@stackhawk.com](mailto:support@stackhawk.com) with your questions, and weâ€™ll help you troubleshoot any issues and get you soaring with StackHawk.   
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@stackhawk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.UserUserOrganization;
import org.openapitools.client.model.UserUserPreferences;

/**
 * Information about the User and how they can access the platform
 */
@ApiModel(description = "Information about the User and how they can access the platform")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T12:28:48.411362-06:00[America/Denver]")
public class UserUserExternal {
  public static final String SERIALIZED_NAME_APPLICATION_IDS = "applicationIds";
  @SerializedName(SERIALIZED_NAME_APPLICATION_IDS)
  private List<String> applicationIds = null;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_ORGANIZATIONS = "organizations";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONS)
  private List<UserUserOrganization> organizations = null;

  public static final String SERIALIZED_NAME_PREFERENCES = "preferences";
  @SerializedName(SERIALIZED_NAME_PREFERENCES)
  private UserUserPreferences preferences;


  public UserUserExternal applicationIds(List<String> applicationIds) {
    
    this.applicationIds = applicationIds;
    return this;
  }

  public UserUserExternal addApplicationIdsItem(String applicationIdsItem) {
    if (this.applicationIds == null) {
      this.applicationIds = new ArrayList<String>();
    }
    this.applicationIds.add(applicationIdsItem);
    return this;
  }

   /**
   * array of application ids this user has access to
   * @return applicationIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "array of application ids this user has access to")

  public List<String> getApplicationIds() {
    return applicationIds;
  }


  public void setApplicationIds(List<String> applicationIds) {
    this.applicationIds = applicationIds;
  }


  public UserUserExternal avatarUrl(String avatarUrl) {
    
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * users avatar url
   * @return avatarUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "users avatar url")

  public String getAvatarUrl() {
    return avatarUrl;
  }


  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public UserUserExternal email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * users email address
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "users email address")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public UserUserExternal firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * users first name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "users first name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public UserUserExternal fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * users full name
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "users full name")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public UserUserExternal id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * the UUID identifier of this user
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the UUID identifier of this user")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UserUserExternal lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * users last name
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "users last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UserUserExternal organizations(List<UserUserOrganization> organizations) {
    
    this.organizations = organizations;
    return this;
  }

  public UserUserExternal addOrganizationsItem(UserUserOrganization organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<UserUserOrganization>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

   /**
   * organizations a user is a part of
   * @return organizations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "organizations a user is a part of")

  public List<UserUserOrganization> getOrganizations() {
    return organizations;
  }


  public void setOrganizations(List<UserUserOrganization> organizations) {
    this.organizations = organizations;
  }


  public UserUserExternal preferences(UserUserPreferences preferences) {
    
    this.preferences = preferences;
    return this;
  }

   /**
   * Get preferences
   * @return preferences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserUserPreferences getPreferences() {
    return preferences;
  }


  public void setPreferences(UserUserPreferences preferences) {
    this.preferences = preferences;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserUserExternal userUserExternal = (UserUserExternal) o;
    return Objects.equals(this.applicationIds, userUserExternal.applicationIds) &&
        Objects.equals(this.avatarUrl, userUserExternal.avatarUrl) &&
        Objects.equals(this.email, userUserExternal.email) &&
        Objects.equals(this.firstName, userUserExternal.firstName) &&
        Objects.equals(this.fullName, userUserExternal.fullName) &&
        Objects.equals(this.id, userUserExternal.id) &&
        Objects.equals(this.lastName, userUserExternal.lastName) &&
        Objects.equals(this.organizations, userUserExternal.organizations) &&
        Objects.equals(this.preferences, userUserExternal.preferences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationIds, avatarUrl, email, firstName, fullName, id, lastName, organizations, preferences);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserUserExternal {\n");
    sb.append("    applicationIds: ").append(toIndentedString(applicationIds)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    preferences: ").append(toIndentedString(preferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

