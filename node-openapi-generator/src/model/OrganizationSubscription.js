/**
 * StackHawk Public API
 *  ![STACKHAWK](https://images.ctfassets.net/nx13ojx82pll/1zPawvEGOq9zKX8PuVw0kB/e4a31b30fdb07b7e424277d7824d2ffe/stackhawk-long.png) # StackHawk API  This is the OpenAPI specification for the [StackHawk](https://www.stackhawk.com) REST API, affectionately known as _Falcon_ ðŸ¦… #Kaakaww!  StackHawk is an application security testing tool built for developers. With powerful automation and integration capabilities, StackHawk gives engineers the ability to find and fix security vulnerabilities on every merge.  ## Getting Started  To make requests to the StackHawk API, you will first need an **API Key** from the StackHawk platform. That will be used to request an **access token**, which is used to authorize requests made to the StackHawk API.  Use of the StackHawk API will require a [StackHawk account](https://auth.stackhawk.com) and an organization with sufficient permissions.  From the StackHawk platform, under [Settings > API Keys](https://app.stackhawk.com/settings/apikeys) create a new API Key. These secrets are long-lived, so store this value in a secure fashion.  ### Authorization  Requests made to the StackHawk API server are authorized following the [OAuth2.0 protocol](https://oauth.net/2/)  To get an access token, make a request to `GET /api/v1/auth/login` and provide the user apikey through the `X-ApiKey` request header. This route will then return an access token that can authenticate further API requests. This token can then be used to authenticate subsequent requests, using the `authorization: Bearer` header.  For more information, see the **Api Authentication** section.  ### Rate Limiting  Api calls are ratelimited, with at most 180 requests per minute.  ## StackHawk Api Standards  ### Client Errors  API Calls that fail due to client input will return 4xx status code.  #### `401 Unauthorized` The server doesn't think you should be making this request.  This error is intentionally vague for security purposes, but any of the following could cause it:  - no authorization was provided - authorization has expired - authorization is insufficient for the requested resource  #### `404 Not Found`  The route or resource does not exist.  #### `400 Bad Request` The server could not process this request, although it may have tried. The JSON reponse body `message` will include details on what input was invalid.  ### Pagination and Sorting  Listing API routes will return resources in a paginated fashion. Paginated requests follow a pattern of taking the following optional path parameters:  * `pageToken`: a string incrementing count of pages in the pagination, starting from '0' * `pageSize`: the number of elements to request in the page, defaults to 10 * `sortField`: sorts the listed resource by an approved field, defaults to sorting by resource name * `sortDir`: either 'asc' or 'desc', defaults ascending  The responseBody of these API routes will additionally include two fields:  * `nextPageToken`: a string indicating the next `pageToken` to pass in for the next page of results with this request * `totalCount`: the total number of resources the query can paginate through  ## Questions? Comments? Concerns? Kaa-Kaww?  We are always making advancements and improvements to our Platform, Scanner and the StackHawk API. If you encounter an issue you cannot solve with this documentation, please reach out to [support@stackhawk.com](mailto:support@stackhawk.com) with your questions, and weâ€™ll help you troubleshoot any issues and get you soaring with StackHawk.   
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@stackhawk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganizationSubscription model module.
 * @module model/OrganizationSubscription
 * @version 0.0.1
 */
class OrganizationSubscription {
    /**
     * Constructs a new <code>OrganizationSubscription</code>.
     * Properties of the external billing subscription for entitled access to the StackHawk platform
     * @alias module:model/OrganizationSubscription
     */
    constructor() { 
        
        OrganizationSubscription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationSubscription} obj Optional instance to populate.
     * @return {module:model/OrganizationSubscription} The populated <code>OrganizationSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationSubscription();

            if (data.hasOwnProperty('appCount')) {
                obj['appCount'] = ApiClient.convertToType(data['appCount'], 'Number');
            }
            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Number');
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('productName')) {
                obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('recurringInterval')) {
                obj['recurringInterval'] = ApiClient.convertToType(data['recurringInterval'], 'String');
            }
            if (data.hasOwnProperty('recurringIntervalCount')) {
                obj['recurringIntervalCount'] = ApiClient.convertToType(data['recurringIntervalCount'], 'Number');
            }
            if (data.hasOwnProperty('stackhawkOrgId')) {
                obj['stackhawkOrgId'] = ApiClient.convertToType(data['stackhawkOrgId'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('unitAmount')) {
                obj['unitAmount'] = ApiClient.convertToType(data['unitAmount'], 'Number');
            }
            if (data.hasOwnProperty('userCount')) {
                obj['userCount'] = ApiClient.convertToType(data['userCount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Soft application limit for this organization
 * @member {Number} appCount
 */
OrganizationSubscription.prototype['appCount'] = undefined;

/**
 * CustomerId from billing provider
 * @member {String} customerId
 */
OrganizationSubscription.prototype['customerId'] = undefined;

/**
 * End Date of this subscription, in seconds from epoch
 * @member {Number} endDate
 */
OrganizationSubscription.prototype['endDate'] = undefined;

/**
 * If external billing is enabled
 * @member {Boolean} isEnabled
 */
OrganizationSubscription.prototype['isEnabled'] = undefined;

/**
 * The name of the purchased product subscription
 * @member {String} productName
 */
OrganizationSubscription.prototype['productName'] = undefined;

/**
 * The quantity of units in this subscription
 * @member {Number} quantity
 */
OrganizationSubscription.prototype['quantity'] = undefined;

/**
 * The billing recurring interval for this subscription
 * @member {module:model/OrganizationSubscription.RecurringIntervalEnum} recurringInterval
 */
OrganizationSubscription.prototype['recurringInterval'] = undefined;

/**
 * How often in the recurring interval billing occurs
 * @member {Number} recurringIntervalCount
 */
OrganizationSubscription.prototype['recurringIntervalCount'] = undefined;

/**
 * The organization UUID for this subscription
 * @member {String} stackhawkOrgId
 */
OrganizationSubscription.prototype['stackhawkOrgId'] = undefined;

/**
 * Start Date of this subscription, in seconds from epoch
 * @member {Number} startDate
 */
OrganizationSubscription.prototype['startDate'] = undefined;

/**
 * The status of the organization subscription
 * @member {module:model/OrganizationSubscription.StatusEnum} status
 */
OrganizationSubscription.prototype['status'] = undefined;

/**
 * SubscriptionId from billing provider
 * @member {String} subscriptionId
 */
OrganizationSubscription.prototype['subscriptionId'] = undefined;

/**
 * The number of units with this subscription
 * @member {Number} unitAmount
 */
OrganizationSubscription.prototype['unitAmount'] = undefined;

/**
 * Soft user limit for this organization
 * @member {Number} userCount
 */
OrganizationSubscription.prototype['userCount'] = undefined;





/**
 * Allowed values for the <code>recurringInterval</code> property.
 * @enum {String}
 * @readonly
 */
OrganizationSubscription['RecurringIntervalEnum'] = {

    /**
     * value: "RECURRING_INTERVAL_UNKNOWN"
     * @const
     */
    "RECURRING_INTERVAL_UNKNOWN": "RECURRING_INTERVAL_UNKNOWN",

    /**
     * value: "MONTH"
     * @const
     */
    "MONTH": "MONTH",

    /**
     * value: "YEAR"
     * @const
     */
    "YEAR": "YEAR"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
OrganizationSubscription['StatusEnum'] = {

    /**
     * value: "SUBSCRIPTION_UNKNOWN"
     * @const
     */
    "SUBSCRIPTION_UNKNOWN": "SUBSCRIPTION_UNKNOWN",

    /**
     * value: "TRIALING"
     * @const
     */
    "TRIALING": "TRIALING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INCOMPLETE"
     * @const
     */
    "INCOMPLETE": "INCOMPLETE",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FREE"
     * @const
     */
    "FREE": "FREE"
};



export default OrganizationSubscription;

